{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { supabase } from \"../../config/supabaseConfig\";\nimport { Button, Input } from 'react-native-elements';\nimport { COLORS, images } from \"../../constants\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport CTAButton from \"../../components/CTAButton/CTAButton\";\nimport Logo from \"../../components/Image/Logo\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var nav = useNavigation();\n  function signUpWithEmail() {\n    return _signUpWithEmail.apply(this, arguments);\n  }\n  function _signUpWithEmail() {\n    _signUpWithEmail = _asyncToGenerator(function* () {\n      setLoading(true);\n      var _yield$supabase$auth$ = yield supabase.auth.signUp({\n          email: email,\n          password: password,\n          username: username\n        }),\n        session = _yield$supabase$auth$.data.session,\n        error = _yield$supabase$auth$.error;\n      if (error) Alert.alert(error.message);\n      if (!session) Alert.alert('Please check your inbox for email verification!');\n      setLoading(false);\n    });\n    return _signUpWithEmail.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(LinearGradient, {\n      colors: [COLORS.heroColour, \"black\"],\n      style: styles.background,\n      children: _jsxs(View, {\n        style: styles.wrapper,\n        children: [_jsx(Logo, {\n          dimension: 200,\n          src: images.Logo\n        }), _jsxs(View, {\n          style: styles.mainContent,\n          children: [_jsx(TextInput, {\n            style: styles.loginTextField,\n            label: \"Name\",\n            placeholder: \"Username\",\n            placeholderTextColor: \"#80848A\",\n            value: username,\n            onChangeText: function onChangeText(text) {\n              return setUsername(text);\n            },\n            autoCapitalize: \"none\",\n            inputMode: \"email\"\n          }), _jsx(TextInput, {\n            style: styles.loginTextField,\n            label: \"Email\",\n            placeholder: \"Email\",\n            placeholderTextColor: \"#80848A\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            autoCapitalize: \"none\",\n            inputMode: \"email\"\n          }), _jsx(TextInput, {\n            style: styles.loginTextField,\n            placeholder: \"Password\",\n            placeholderTextColor: \"#80848A\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            secureTextEntry: true\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(CTAButton, {\n            title: \"Login\",\n            onPress: signUpWithEmail,\n            variant: \"primary\"\n          }), _jsxs(Text, {\n            style: styles.textSignUp,\n            children: [\"Have an account?\", \" \", _jsx(Text, {\n              onPress: function onPress() {\n                return nav.navigate(\"Login\");\n              },\n              children: \"Sign In\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  background: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: \"100%\"\n  },\n  wrapper: {\n    flex: 1,\n    marginTop: 0,\n    padding: 40\n  },\n  loginTextField: {\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.accentColour1Orange,\n    height: 70,\n    fontSize: 30,\n    marginVertical: 10,\n    fontWeight: \"300\",\n    color: COLORS.fontColour,\n    textDecorationLine: 'none'\n  },\n  buttonContainer: {\n    top: 40\n  },\n  textSignUp: {\n    marginTop: 20,\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useState","Alert","StyleSheet","View","Pressable","SafeAreaView","Text","TextInput","supabase","Button","Input","COLORS","images","LinearGradient","CTAButton","Logo","useNavigation","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","username","setUsername","_useState7","_useState8","loading","setLoading","nav","signUpWithEmail","_signUpWithEmail","apply","arguments","_asyncToGenerator","_yield$supabase$auth$","auth","signUp","session","data","error","alert","message","style","styles","container","children","colors","heroColour","background","wrapper","dimension","src","mainContent","loginTextField","label","placeholder","placeholderTextColor","value","onChangeText","text","autoCapitalize","inputMode","secureTextEntry","buttonContainer","title","onPress","variant","textSignUp","navigate","create","flex","alignItems","justifyContent","position","left","right","top","height","marginTop","padding","borderBottomWidth","borderBottomColor","accentColour1Orange","fontSize","marginVertical","fontWeight","color","fontColour","textDecorationLine"],"sources":["D:/Moco/PartyPilot/src/screens/auth/RegisterScreen.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Alert, StyleSheet, View, Pressable, SafeAreaView, Text, TextInput } from 'react-native'\r\nimport { supabase } from '../../config/supabaseConfig'\r\nimport { Button, Input } from 'react-native-elements'\r\nimport { COLORS, images } from '../../constants'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport CTAButton from \"../../components/CTAButton/CTAButton\"\r\nimport Logo from '../../components/Image/Logo'\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function RegisterScreen () {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  \r\n  const nav = useNavigation();\r\n\r\nasync function signUpWithEmail() {\r\n    setLoading(true)\r\n    const {\r\n      data: { session },\r\n      error,\r\n    } = await supabase.auth.signUp({\r\n      email: email,\r\n      password: password,\r\n      username: username,\r\n    })\r\n\r\n    if (error) Alert.alert(error.message)\r\n    if (!session) Alert.alert('Please check your inbox for email verification!')\r\n    setLoading(false)\r\n  }\r\n\r\n    return (\r\n     <View style={styles.container}>\r\n       <LinearGradient\r\n        colors={[COLORS.heroColour, \"black\"]}\r\n        style={styles.background}\r\n      >   \r\n        <View style={styles.wrapper}>\r\n          <Logo dimension={200} src={images.Logo}/>\r\n            <View style={styles.mainContent}>\r\n                  <TextInput\r\n              style={styles.loginTextField}\r\n              label=\"Name\"\r\n              placeholder=\"Username\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={username}\r\n              onChangeText={(text) => setUsername(text)}\r\n              autoCapitalize=\"none\"\r\n              inputMode=\"email\"\r\n            />\r\n            <TextInput\r\n              style={styles.loginTextField}\r\n              label=\"Email\"\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={email}\r\n              onChangeText={(text) => setEmail(text)}\r\n              autoCapitalize=\"none\"\r\n              inputMode=\"email\"\r\n            />\r\n            <TextInput\r\n              style={styles.loginTextField}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n              secureTextEntry\r\n            />\r\n                    </View>\r\n                    <View style={styles.buttonContainer}>\r\n               <CTAButton\r\n                title=\"Login\"\r\n                onPress={signUpWithEmail}\r\n              variant=\"primary\" />\r\n            \r\n           <Text style={styles.textSignUp}>\r\n          Have an account?{\" \"}\r\n              <Text onPress={() => nav.navigate(\"Login\")\r\n          }>\r\n             Sign In\r\n          </Text>\r\n          </Text>\r\n          </View>\r\n          </View>\r\n        </LinearGradient>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n   background: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    height: \"100%\",\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    marginTop: 0,\r\n    padding: 40, \r\n  },\r\n  loginTextField: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.accentColour1Orange,\r\n    height: 70,\r\n    fontSize: 30,\r\n    marginVertical: 10,\r\n    fontWeight: \"300\",\r\n    color: COLORS.fontColour,\r\n    textDecorationLine: 'none',\r\n  },\r\n  buttonContainer: {\r\n    top: 40,\r\n  },\r\n  textSignUp: {\r\n    marginTop: 20,\r\n    color: \"white\",\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}