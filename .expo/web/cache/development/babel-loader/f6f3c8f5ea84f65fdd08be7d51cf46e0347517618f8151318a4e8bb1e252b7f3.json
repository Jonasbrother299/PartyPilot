{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { COLORS, images } from \"../../constants\";\nimport { supabase } from \"../../config/supabaseConfig\";\nimport { useSession } from \"../../hooks/useSession\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProfileImage(_ref) {\n  var dimension = _ref.dimension,\n    focused = _ref.focused;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    avatarUrl = _useState2[0],\n    setAvatarUrl = _useState2[1];\n  var _useSession = useSession(),\n    session = _useSession.session;\n  useEffect(function () {\n    function loadAvatarUrl() {\n      return _loadAvatarUrl.apply(this, arguments);\n    }\n    function _loadAvatarUrl() {\n      _loadAvatarUrl = _asyncToGenerator(function* () {\n        try {\n          if (!session || !session.user || !session.user.id) return;\n          var _yield$supabase$from$ = yield supabase.from(\"profiles\").select(\"avatar_url\").eq(\"id\", session.user.id).single(),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) {\n            throw error;\n          }\n          if (data && data.avatar_url) {\n            try {\n              var imageUrl = `https://gxpswfomuonmydpsyenb.supabase.co/storage/v1/object/public/avatars/${data.avatar_url}`;\n              setAvatarUrl(imageUrl);\n            } catch (error) {\n              console.error(\"Error downloading image:\", error.message);\n              Alert.alert(\"Error\", \"Failed to download image. Please try again.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error loading image:\", error.message);\n        }\n      });\n      return _loadAvatarUrl.apply(this, arguments);\n    }\n    loadAvatarUrl();\n  }, [session]);\n  var styles = StyleSheet.create({\n    image: {\n      borderRadius: dimension / 2,\n      width: dimension,\n      height: dimension,\n      borderColor: COLORS.fontColour,\n      borderWidth: focused ? 1 : 0\n    }\n  });\n  return _jsx(View, {\n    children: avatarUrl ? _jsx(Image, {\n      source: {\n        uri: avatarUrl\n      },\n      style: styles.image\n    }) : _jsx(Image, {\n      source: images.profile,\n      style: styles.image\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Image","Alert","COLORS","images","supabase","useSession","jsx","_jsx","ProfileImage","_ref","dimension","focused","_useState","_useState2","_slicedToArray","avatarUrl","setAvatarUrl","_useSession","session","loadAvatarUrl","_loadAvatarUrl","apply","arguments","_asyncToGenerator","user","id","_yield$supabase$from$","from","select","eq","single","data","error","avatar_url","imageUrl","console","message","alert","styles","create","image","borderRadius","width","height","borderColor","fontColour","borderWidth","children","source","uri","style","profile"],"sources":["D:/Moco/PartyPilot/src/components/ProfileImage/ProfileImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Image, Alert } from \"react-native\";\r\nimport { COLORS, images } from \"../../constants\";\r\nimport { supabase } from \"../../config/supabaseConfig\";\r\nimport { useSession } from \"../../hooks/useSession\";\r\n\r\nexport default function ProfileImage({ dimension, focused }) {\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n  const { session } = useSession();\r\n\r\n  useEffect(() => {\r\n    async function loadAvatarUrl() {\r\n      try {\r\n        if (!session || !session.user || !session.user.id) return;\r\n\r\n        const { data, error } = await supabase\r\n          .from(\"profiles\")\r\n          .select(\"avatar_url\")\r\n          .eq(\"id\", session.user.id)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        if (data && data.avatar_url) {\r\n          try {\r\n            const imageUrl = `https://gxpswfomuonmydpsyenb.supabase.co/storage/v1/object/public/avatars/${data.avatar_url}`;\r\n            setAvatarUrl(imageUrl);\r\n          } catch (error) {\r\n            console.error(\"Error downloading image:\", error.message);\r\n            Alert.alert(\"Error\", \"Failed to download image. Please try again.\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading image:\", error.message);\r\n        // Alert.alert(\"Error\", \"Failed to load image. Please try again.\");\r\n      }\r\n    }\r\n\r\n    loadAvatarUrl();\r\n  }, [session]);\r\n\r\n  const styles = StyleSheet.create({\r\n    image: {\r\n      borderRadius: dimension / 2,\r\n      width: dimension,\r\n      height: dimension,\r\n      borderColor: COLORS.fontColour,\r\n      borderWidth: focused ? 1 : 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      {avatarUrl ? (\r\n        <Image source={{ uri: avatarUrl }} style={styles.image} />\r\n      ) : (\r\n        <Image source={images.profile} style={styles.image} />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}