{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { COLORS, images } from \"../../constants\";\nimport { supabase } from \"../../config/supabaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProfileImage(_ref) {\n  var dimension = _ref.dimension,\n    focused = _ref.focused,\n    session = _ref.session;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    avatarUrl = _useState2[0],\n    setAvatarUrl = _useState2[1];\n  useEffect(function () {\n    function loadAvatarUrl() {\n      return _loadAvatarUrl.apply(this, arguments);\n    }\n    function _loadAvatarUrl() {\n      _loadAvatarUrl = _asyncToGenerator(function* () {\n        try {\n          if (!session.user || !session.user.id) return;\n          var _yield$supabase$from$ = yield supabase.from('profiles').select('avatar_url').eq('id', session.user.id).single(),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) {\n            throw error;\n          }\n          if (data && data.avatar_url) {\n            try {\n              var imageUrl = `${process.env.EXPO_PUBLIC_SUPABASE_URL}/storage/v1/object/public/avatars/${data.avatar_url}`;\n              setAvatarUrl(imageUrl);\n            } catch (error) {\n              console.error('Error downloading image:', error.message);\n              Alert.alert('Error', 'Failed to download image. Please try again.');\n            }\n          }\n        } catch (error) {\n          console.error('Error loading image:', error.message);\n          Alert.alert('Error', 'Failed to load image. Please try again.');\n        }\n      });\n      return _loadAvatarUrl.apply(this, arguments);\n    }\n    loadAvatarUrl();\n  }, [session]);\n  var styles = StyleSheet.create({\n    image: {\n      borderRadius: dimension / 2,\n      width: dimension,\n      height: dimension,\n      borderColor: COLORS.fontColour,\n      borderWidth: focused ? 1 : 0\n    }\n  });\n  return _jsx(View, {\n    children: avatarUrl ? _jsx(Image, {\n      source: {\n        uri: avatarUrl\n      },\n      style: styles.image\n    }) : _jsx(Image, {\n      source: images.profile,\n      style: styles.image\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Image","ActivityIndicator","Alert","COLORS","images","supabase","jsx","_jsx","ProfileImage","_ref","dimension","focused","session","_useState","_useState2","_slicedToArray","avatarUrl","setAvatarUrl","loadAvatarUrl","_loadAvatarUrl","apply","arguments","_asyncToGenerator","user","id","_yield$supabase$from$","from","select","eq","single","data","error","avatar_url","imageUrl","process","env","EXPO_PUBLIC_SUPABASE_URL","console","message","alert","styles","create","image","borderRadius","width","height","borderColor","fontColour","borderWidth","children","source","uri","style","profile"],"sources":["D:/Moco/PartyPilot/src/components/ProfileImage/ProfileImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Image, ActivityIndicator, Alert } from 'react-native';\r\nimport { COLORS, images } from '../../constants';\r\nimport { supabase } from '../../config/supabaseConfig';\r\n\r\nexport default function ProfileImage({ dimension, focused, session }) {\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadAvatarUrl() {\r\n      try {\r\n        if (!session.user || !session.user.id) return;\r\n\r\n        const { data, error } = await supabase\r\n          .from('profiles')\r\n          .select('avatar_url')\r\n          .eq('id', session.user.id)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        if (data && data.avatar_url) {\r\n          try {\r\n            const imageUrl = `${process.env.EXPO_PUBLIC_SUPABASE_URL}/storage/v1/object/public/avatars/${data.avatar_url}`;\r\n            setAvatarUrl(imageUrl);\r\n\r\n          } catch (error) {\r\n            console.error('Error downloading image:', error.message);\r\n            Alert.alert('Error', 'Failed to download image. Please try again.');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading image:', error.message);\r\n        Alert.alert('Error', 'Failed to load image. Please try again.');\r\n      }\r\n    }\r\n\r\n    loadAvatarUrl();\r\n  }, [session]);\r\n\r\n  const styles = StyleSheet.create({\r\n    image: {\r\n      borderRadius: dimension / 2,\r\n      width: dimension,\r\n      height: dimension,\r\n      borderColor: COLORS.fontColour,\r\n      borderWidth: focused ? 1 : 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      {avatarUrl ? (\r\n        <Image source={{ uri: avatarUrl }} style={styles.image} />\r\n      ) : (\r\n        <Image source={images.profile} style={styles.image} />\r\n      )}\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}