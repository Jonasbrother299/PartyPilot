{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { COLORS, icons } from \"../../constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icons from \"../Image/icons\";\nimport FilterItemsDiscover from \"../../screens/Discover/FilterItemsDiscover\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchIcon() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var navigation = useNavigation();\n  var inputRef = useRef(null);\n  var handleGoBack = function handleGoBack() {\n    navigation.navigate(\"Discover\");\n  };\n  var handleTextInputChange = function handleTextInputChange(text) {\n    setSearchText(text);\n  };\n  useEffect(function () {\n    inputRef.current.focus();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsxs(View, {\n        style: styles.wrapper,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleGoBack,\n          style: styles.backButton,\n          children: _jsx(Icons, {\n            src: icons.backArrow,\n            dimension: 20\n          })\n        }), _jsx(TextInput, {\n          ref: inputRef,\n          style: styles.input,\n          placeholder: \"Enter username\",\n          placeholderTextColor: \"#80848A\",\n          onChangeText: function onChangeText(text) {\n            return setSearchText(text);\n          },\n          value: searchText\n        })]\n      }), _jsx(View, {\n        style: styles.content,\n        children: _jsx(FilterItemsDiscover, {})\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    height: \"100%\"\n  },\n  wrapper: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingTop: 20,\n    paddingHorizontal: 20\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    backgroundColor: COLORS.primaryColour1,\n    borderRadius: 20,\n    flex: 1,\n    marginLeft: 0,\n    paddingHorizontal: 8,\n    color: \"#FFF\"\n  },\n  backButton: {\n    paddingRight: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","StyleSheet","View","TouchableOpacity","TextInput","COLORS","icons","useNavigation","Icons","FilterItemsDiscover","jsx","_jsx","jsxs","_jsxs","SearchIcon","_useState","_useState2","_slicedToArray","searchText","setSearchText","navigation","inputRef","handleGoBack","navigate","handleTextInputChange","text","current","focus","style","styles","container","children","wrapper","onPress","backButton","src","backArrow","dimension","ref","input","placeholder","placeholderTextColor","onChangeText","value","content","create","alignItems","backgroundColor","height","width","flexDirection","justifyContent","paddingTop","paddingHorizontal","borderColor","borderWidth","primaryColour1","borderRadius","flex","marginLeft","color","paddingRight"],"sources":["D:/Moco/PartyPilot/src/components/Search/Search.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { StyleSheet, View, TouchableOpacity, TextInput } from \"react-native\";\r\n\r\nimport { COLORS, icons } from \"../../constants\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Icons from \"../Image/icons\";\r\nimport FilterItemsDiscover from \"../../screens/Discover/FilterItemsDiscover\";\r\nexport default function SearchIcon() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleGoBack = () => {\r\n    navigation.navigate(\"Discover\");\r\n  };\r\n\r\n  const handleTextInputChange = (text) => {\r\n    setSearchText(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Focus on the input field when the component mounts\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        <View style={styles.wrapper}>\r\n          <TouchableOpacity onPress={handleGoBack} style={styles.backButton}>\r\n            <Icons src={icons.backArrow} dimension={20} />\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            ref={inputRef}\r\n            style={styles.input}\r\n            placeholder=\"Enter username\"\r\n            placeholderTextColor=\"#80848A\"\r\n            onChangeText={(text) => setSearchText(text)}\r\n            value={searchText}\r\n          />\r\n        </View>\r\n        <View style={styles.content}>\r\n          <FilterItemsDiscover />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n    height: \"100%\",\r\n  },\r\n  wrapper: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingTop: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    backgroundColor: COLORS.primaryColour1,\r\n    borderRadius: 20,\r\n    flex: 1,\r\n    marginLeft: 0,\r\n    paddingHorizontal: 8,\r\n    color: \"#FFF\",\r\n  },\r\n  backButton: {\r\n    paddingRight: 20,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}