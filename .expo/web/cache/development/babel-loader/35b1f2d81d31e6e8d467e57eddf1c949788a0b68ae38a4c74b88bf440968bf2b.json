{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from \"../config/supabaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SessionContext = createContext({\n  session: null,\n  loading: true\n});\nexport var useSession = function useSession() {\n  return useContext(SessionContext);\n};\nexport var SessionProvider = function SessionProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    session = _useState2[0],\n    setSession = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    supabase.auth.getSession().then(function (_ref2) {\n      var session = _ref2.data.session;\n      setSession(session);\n      setLoading(false);\n    });\n    supabase.auth.onAuthStateChange(function (_event, session) {\n      setSession(session);\n      setLoading(false);\n    });\n    return function () {\n      return supabase.auth.removeAuthStateListener();\n    };\n  }, []);\n  return _jsx(SessionContext.Provider, {\n    value: {\n      session: session,\n      loading: loading\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsx","_jsx","SessionContext","session","loading","useSession","SessionProvider","_ref","children","_useState","_useState2","_slicedToArray","setSession","_useState3","_useState4","setLoading","auth","getSession","then","_ref2","data","onAuthStateChange","_event","removeAuthStateListener","Provider","value"],"sources":["D:/Moco/PartyPilot/src/hooks/useSession.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { supabase } from '../config/supabaseConfig';\r\n\r\n// Create a context with default values\r\nconst SessionContext = createContext({ session: null, loading: true });\r\n\r\nexport const useSession = () => {\r\n  // Use the useContext hook to access the context\r\n  return useContext(SessionContext);\r\n};\r\n\r\n// Create a provider component to wrap your app and manage the session state\r\nexport const SessionProvider = ({ children }) => {\r\n  const [session, setSession] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Checks if there is already a session\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\r\n      setSession(session);\r\n      setLoading(false);\r\n    });\r\n\r\n    // Subscribe to auth state changes using onAuthStateChange\r\n    supabase.auth.onAuthStateChange((_event, session) => {\r\n      setSession(session);\r\n      setLoading(false);\r\n    });\r\n\r\n    // Clean up the subscription when the component unmounts\r\n    return () => supabase.auth.removeAuthStateListener();\r\n  }, []);\r\n\r\n  return (\r\n    // Provide the session and loading state to the context\r\n    <SessionContext.Provider value={{ session, loading }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,QAAQ;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAGpD,IAAMC,cAAc,GAAGP,aAAa,CAAC;EAAEQ,OAAO,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC;AAEtE,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAE9B,OAAOT,UAAU,CAACM,cAAc,CAAC;AACnC,CAAC;AAGD,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACxC,IAAAC,SAAA,GAA8BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCN,OAAO,GAAAO,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA8BhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAArCT,OAAO,GAAAU,UAAA;IAAEC,UAAU,GAAAD,UAAA;EAE1BhB,SAAS,CAAC,YAAM;IAEdC,QAAQ,CAACiB,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAC,KAAA,EAA2B;MAAA,IAAhBhB,OAAO,GAAAgB,KAAA,CAAfC,IAAI,CAAIjB,OAAO;MAChDS,UAAU,CAACT,OAAO,CAAC;MACnBY,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAGFhB,QAAQ,CAACiB,IAAI,CAACK,iBAAiB,CAAC,UAACC,MAAM,EAAEnB,OAAO,EAAK;MACnDS,UAAU,CAACT,OAAO,CAAC;MACnBY,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAGF,OAAO;MAAA,OAAMhB,QAAQ,CAACiB,IAAI,CAACO,uBAAuB,CAAC,CAAC;IAAA;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,OAEEtB,IAAA,CAACC,cAAc,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,OAAO,EAAPA,OAAO;MAAEC,OAAO,EAAPA;IAAQ,CAAE;IAAAI,QAAA,EAClDA;EAAQ,CACc,CAAC;AAE9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}