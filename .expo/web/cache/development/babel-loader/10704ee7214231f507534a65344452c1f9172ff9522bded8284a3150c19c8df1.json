{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { COLORS } from \"../../constants\";\nimport { useState, useEffect } from 'react';\nimport { supabase } from \"../../config/supabaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProfilPicture(_ref) {\n  var src = _ref.src,\n    dimension = _ref.dimension,\n    focused = _ref.focused,\n    url = _ref.url;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    uploading = _useState2[0],\n    setUploading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    avatarUrl = _useState4[0],\n    setAvatarUrl = _useState4[1];\n  useEffect(function () {\n    if (url) downloadImage(url);\n  }, [url]);\n  function downloadImage(_x) {\n    return _downloadImage.apply(this, arguments);\n  }\n  function _downloadImage() {\n    _downloadImage = _asyncToGenerator(function* (path) {\n      try {\n        var _yield$supabase$stora = yield supabase.storage.from('avatars').download(path),\n          data = _yield$supabase$stora.data,\n          error = _yield$supabase$stora.error;\n        if (error) {\n          throw error;\n        }\n        var fr = new FileReader();\n        fr.readAsDataURL(data);\n        fr.onload = function () {\n          setAvatarUrl(fr.result);\n        };\n      } catch (error) {\n        if (error instanceof Error) {\n          console.log('Error downloading image: ', error.message);\n        }\n      }\n    });\n    return _downloadImage.apply(this, arguments);\n  }\n  var styles = StyleSheet.create({\n    image: {\n      borderRadius: dimension / 2,\n      width: dimension,\n      height: dimension,\n      borderColor: COLORS.fontColour,\n      borderWidth: focused ? 1 : 0\n    }\n  });\n  return _jsx(View, {\n    children: _jsx(Image, {\n      source: src,\n      style: styles.image\n    })\n  });\n}","map":{"version":3,"names":["COLORS","useState","useEffect","supabase","jsx","_jsx","ProfilPicture","_ref","src","dimension","focused","url","_useState","_useState2","_slicedToArray","uploading","setUploading","_useState3","_useState4","avatarUrl","setAvatarUrl","downloadImage","_x","_downloadImage","apply","arguments","_asyncToGenerator","path","_yield$supabase$stora","storage","from","download","data","error","fr","FileReader","readAsDataURL","onload","result","Error","console","log","message","styles","StyleSheet","create","image","borderRadius","width","height","borderColor","fontColour","borderWidth","View","children","Image","source","style"],"sources":["D:/Moco/PartyPilot/src/components/ProfileImage/ProfileImage.jsx"],"sourcesContent":["import { Text, StyleSheet, View, Image } from 'react-native'\r\nimport { COLORS } from '../../constants'\r\nimport { useState, useEffect } from 'react'\r\nimport { supabase } from '../../config/supabaseConfig'\r\nexport default function ProfilPicture({ src, dimension, focused, url }) {\r\n   const [uploading, setUploading] = useState(false)\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  \r\n   useEffect(() => {\r\n    if (url) downloadImage(url)\r\n   }, [url])\r\n\r\n  async function downloadImage(path) {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('avatars').download(path)\r\n\r\n      if (error) {\r\n        throw error\r\n      }\r\n\r\n      const fr = new FileReader()\r\n      fr.readAsDataURL(data)\r\n      fr.onload = () => {\r\n        setAvatarUrl(fr.result)\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        console.log('Error downloading image: ', error.message)\r\n      }\r\n    }\r\n  }\r\n  \r\n    const styles = StyleSheet.create({\r\n        image: {\r\n            borderRadius: dimension / 2,\r\n            width: dimension, \r\n            height: dimension, \r\n            borderColor: COLORS.fontColour,\r\n            borderWidth: focused ? 1 : 0,\r\n        },\r\n    })\r\n    \r\n    return (\r\n      <View >\r\n        <Image source={src} style={styles.image} />\r\n      </View>\r\n    )\r\n}"],"mappings":";;;;;;AACA,SAASA,MAAM;AACf,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AACtD,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAmC;EAAA,IAAhCC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,GAAG,GAAAJ,IAAA,CAAHI,GAAG;EACjE,IAAAC,SAAA,GAAkCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC/B,IAAAI,UAAA,GAAkChB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE7BhB,SAAS,CAAC,YAAM;IACf,IAAIS,GAAG,EAAEU,aAAa,CAACV,GAAG,CAAC;EAC5B,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAAA,SAEKU,aAAaA,CAAAC,EAAA;IAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,eAAA;IAAAA,cAAA,GAAAG,iBAAA,CAA5B,WAA6BC,IAAI,EAAE;MACjC,IAAI;QACF,IAAAC,qBAAA,SAA8BzB,QAAQ,CAAC0B,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC,CAACC,QAAQ,CAACJ,IAAI,CAAC;UAArEK,IAAI,GAAAJ,qBAAA,CAAJI,IAAI;UAAEC,KAAK,GAAAL,qBAAA,CAALK,KAAK;QAEnB,IAAIA,KAAK,EAAE;UACT,MAAMA,KAAK;QACb;QAEA,IAAMC,EAAE,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC3BD,EAAE,CAACE,aAAa,CAACJ,IAAI,CAAC;QACtBE,EAAE,CAACG,MAAM,GAAG,YAAM;UAChBjB,YAAY,CAACc,EAAE,CAACI,MAAM,CAAC;QACzB,CAAC;MACH,CAAC,CAAC,OAAOL,KAAK,EAAE;QACd,IAAIA,KAAK,YAAYM,KAAK,EAAE;UAC1BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAER,KAAK,CAACS,OAAO,CAAC;QACzD;MACF;IACF,CAAC;IAAA,OAAAnB,cAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAEC,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;IAC7BC,KAAK,EAAE;MACHC,YAAY,EAAEtC,SAAS,GAAG,CAAC;MAC3BuC,KAAK,EAAEvC,SAAS;MAChBwC,MAAM,EAAExC,SAAS;MACjByC,WAAW,EAAElD,MAAM,CAACmD,UAAU;MAC9BC,WAAW,EAAE1C,OAAO,GAAG,CAAC,GAAG;IAC/B;EACJ,CAAC,CAAC;EAEF,OACEL,IAAA,CAACgD,IAAI;IAAAC,QAAA,EACHjD,IAAA,CAACkD,KAAK;MAACC,MAAM,EAAEhD,GAAI;MAACiD,KAAK,EAAEd,MAAM,CAACG;IAAM,CAAE;EAAC,CACvC,CAAC;AAEb"},"metadata":{},"sourceType":"module","externalDependencies":[]}