{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { supabase } from \"../../config/supabaseConfig\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport CTAButton from \"../../components/Basics/CTAButton/CTAButton\";\nimport { COLORS, images } from \"../../constants\";\nimport Logo from \"../../components/Basics/Image/Logo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var nav = useNavigation();\n  function signUpWithEmail() {\n    return _signUpWithEmail.apply(this, arguments);\n  }\n  function _signUpWithEmail() {\n    _signUpWithEmail = _asyncToGenerator(function* () {\n      setLoading(true);\n      var _yield$supabase$auth$ = yield supabase.auth.signUp({\n          email: email,\n          password: password\n        }, {\n          data: {\n            first_name: username,\n            age: 27\n          }\n        }),\n        session = _yield$supabase$auth$.data.session,\n        error = _yield$supabase$auth$.error;\n      if (error) Alert.alert(error.message);\n      setLoading(false);\n    });\n    return _signUpWithEmail.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(LinearGradient, {\n      colors: [COLORS.heroColour, \"black\"],\n      style: styles.background,\n      children: _jsxs(View, {\n        style: styles.wrapper,\n        children: [_jsx(Logo, {\n          dimension: 150,\n          src: images.Logo\n        }), _jsxs(View, {\n          style: styles.mainContent,\n          children: [_jsx(TextInput, {\n            style: styles.loginTextField,\n            label: \"Name\",\n            placeholder: \"Username\",\n            placeholderTextColor: \"#80848A\",\n            value: username,\n            onChangeText: function onChangeText(text) {\n              return setUsername(text);\n            },\n            autoCapitalize: \"none\",\n            inputMode: \"email\"\n          }), _jsx(TextInput, {\n            style: styles.loginTextField,\n            label: \"Email\",\n            placeholder: \"Email\",\n            placeholderTextColor: \"#80848A\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            autoCapitalize: \"none\",\n            inputMode: \"email\"\n          }), _jsx(TextInput, {\n            style: styles.loginTextField,\n            placeholder: \"Password\",\n            placeholderTextColor: \"#80848A\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            secureTextEntry: true\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(CTAButton, {\n            title: \"Login\",\n            onPress: signUpWithEmail,\n            variant: \"primary\",\n            height: 50\n          }), _jsxs(Text, {\n            style: styles.textSignUp,\n            children: [\"Have an account?\", \" \", _jsx(Text, {\n              onPress: function onPress() {\n                return nav.navigate(\"Login\");\n              },\n              children: \"Sign In\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  background: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    height: \"100%\"\n  },\n  wrapper: {\n    flex: 1,\n    marginTop: 0,\n    padding: 40\n  },\n  loginTextField: {\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.accentColour1Orange,\n    height: 70,\n    fontSize: 30,\n    marginVertical: 10,\n    fontWeight: \"300\",\n    color: COLORS.fontColour,\n    textDecorationLine: \"none\"\n  },\n  buttonContainer: {\n    top: 40\n  },\n  textSignUp: {\n    marginTop: 20,\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useState","Alert","StyleSheet","View","Text","TextInput","supabase","useNavigation","LinearGradient","CTAButton","COLORS","images","Logo","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","username","setUsername","_useState7","_useState8","loading","setLoading","nav","signUpWithEmail","_signUpWithEmail","apply","arguments","_asyncToGenerator","_yield$supabase$auth$","auth","signUp","data","first_name","age","session","error","alert","message","style","styles","container","children","colors","heroColour","background","wrapper","dimension","src","mainContent","loginTextField","label","placeholder","placeholderTextColor","value","onChangeText","text","autoCapitalize","inputMode","secureTextEntry","buttonContainer","title","onPress","variant","height","textSignUp","navigate","create","flex","alignItems","justifyContent","position","left","right","top","marginTop","padding","borderBottomWidth","borderBottomColor","accentColour1Orange","fontSize","marginVertical","fontWeight","color","fontColour","textDecorationLine"],"sources":["D:/Moco/PartyPilot/src/screens/auth/RegisterScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, StyleSheet, View, Text, TextInput } from \"react-native\";\r\nimport { supabase } from \"../../config/supabaseConfig\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nimport CTAButton from \"../../components/Basics/CTAButton/CTAButton\";\r\nimport { COLORS, images } from \"../../constants\";\r\nimport Logo from \"../../components/Basics/Image/Logo\";\r\n\r\nexport default function RegisterScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const nav = useNavigation();\r\n\r\n  async function signUpWithEmail() {\r\n    setLoading(true);\r\n    const {\r\n      data: { session },\r\n      error,\r\n    } = await supabase.auth.signUp(\r\n      {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      {\r\n        data: {\r\n          first_name: username,\r\n          age: 27,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (error) Alert.alert(error.message);\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <LinearGradient\r\n        colors={[COLORS.heroColour, \"black\"]}\r\n        style={styles.background}\r\n      >\r\n        <View style={styles.wrapper}>\r\n          <Logo dimension={150} src={images.Logo} />\r\n          <View style={styles.mainContent}>\r\n            <TextInput\r\n              style={styles.loginTextField}\r\n              label=\"Name\"\r\n              placeholder=\"Username\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={username}\r\n              onChangeText={(text) => setUsername(text)}\r\n              autoCapitalize=\"none\"\r\n              inputMode=\"email\"\r\n            />\r\n            <TextInput\r\n              style={styles.loginTextField}\r\n              label=\"Email\"\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={email}\r\n              onChangeText={(text) => setEmail(text)}\r\n              autoCapitalize=\"none\"\r\n              inputMode=\"email\"\r\n            />\r\n            <TextInput\r\n              style={styles.loginTextField}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#80848A\"\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n              secureTextEntry\r\n            />\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            <CTAButton\r\n              title=\"Login\"\r\n              onPress={signUpWithEmail}\r\n              variant=\"primary\"\r\n              height={50}\r\n            />\r\n\r\n            <Text style={styles.textSignUp}>\r\n              Have an account?{\" \"}\r\n              <Text onPress={() => nav.navigate(\"Login\")}>Sign In</Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  background: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    height: \"100%\",\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    marginTop: 0,\r\n    padding: 40,\r\n  },\r\n  loginTextField: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.accentColour1Orange,\r\n    height: 70,\r\n    fontSize: 30,\r\n    marginVertical: 10,\r\n    fontWeight: \"300\",\r\n    color: COLORS.fontColour,\r\n    textDecorationLine: \"none\",\r\n  },\r\n  buttonContainer: {\r\n    top: 40,\r\n  },\r\n  textSignUp: {\r\n    marginTop: 20,\r\n    color: \"white\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}